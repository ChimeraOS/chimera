#!/bin/bash

arg=$1
if [ $# -gt 1 ] ; then
    echo "This script takes at most one argument"
    echo "Usage:"
    echo "$0 [-l|--logout]"
    echo ""
    echo "  -l | --logout   Logout after migration"
fi

DATA_HOME=${XDG_DATA_HOME:-$HOME/.local/share}
CONFIG_HOME=${XDG_CONFIG_HOME:-$HOME/.config}
CACHE_HOME=${XDG_CACHE_HOME:-$HOME/.cache}

if ! [ -d $CONFIG_HOME/steam-buddy ] && \
    ! [ -d $DATA_HOME/steam-buddy ] && \
    ! [ -d $DATA_HOME/steam-shortcuts ] && \
    ! [ -d $CACHE_HOME/steam-buddy ] ;
then
    # Nothing to migrate, we can exit
    echo "Found nothing to migrate"
    exit 0
fi

function relink {
    for d in * ; do
        if [ -d $d ] ; then
            if ! [ "$(basename $d)" == "epic-store" ] &&
                ! [ "$(basename $d)" == "gog" ] ; then
                pushd "$d"
                for l in * ; do
                    if [[ -L "${l}" ]] ; then
                        old_link=$(readlink "${l}")
                        new_link=${old_link/$PWD\//}
                        ln -sfv "${new_link}" "${l}"
                    fi
                done
                popd
            fi
        fi
    done
}

## MIGRATION MAGIC ##

# Check if there are config files from steam-buddy
if [ -d $CONFIG_HOME/steam-buddy ] ; then
    mv -Tbv $CONFIG_HOME/steam-buddy $CONFIG_HOME/chimera
    echo "Configuration directory has been moved"
fi

# Go to our directories and replace settings:
if [ -f $DATA_HOME/steam-buddy/settings/settings.json ]; then
    # Migrate settings to new location
    echo "Moving configuration to new location"
    if ! [ -d $CONFIG_HOME/chimera ] ; then
        mkdir -p $CONFIG_HOME/chimera
    fi
    mv -Tbv $DATA_HOME/steam-buddy/settings/settings.json $CONFIG_HOME/chimera/settings.json
    rm -rf $DATA_HOME/steam-buddy/settings
    echo "Renaming relevant paths inside settings file"
    cd $CONFIG_HOME/chimera
    sed -i 's|/steam-buddy/|/chimera/|g' settings.json
fi

# Migrate shortcuts and
# Check if there are platform specific yaml files
platforms=('32x'
           '3do'
           'arcade'
           'atari-2600'
           'dreamcast'
           'epic-store'
           'flathub'
           'gb'
           'gba'
           'gbc'
           'gc'
           'gog'
           'sgg'
           'genesis'
           'jaguar'
           'sms'
           'neo-geo'
           'nes'
           'n64'
           'ps1'
           'ps2'
           'psp'
           'saturn'
           'sega-cd'
           'snes'
           'tg-16'
           'switch')
if [ -d $DATA_HOME/steam-shortcuts ] ; then
    if ! [ -d $DATA_HOME/chimera ] ; then
        mkdir -p $DATA_HOME/chimera
    fi
    mv -Tbv $DATA_HOME/steam-shortcuts $DATA_HOME/chimera/shortcuts
    cd $DATA_HOME/chimera/shortcuts
    for p in ${platforms[@]} ; do
        if [ -f "steam-buddy.${p}.yaml" ] ; then
            echo "Renaming steam-buddy.${p}.yaml to chimera.${p}.yaml"
            mv -Tbv "steam-buddy.${p}.yaml" "chimera.${p}.yaml"
        fi
    done
fi

# Replace paths inside any yaml file in shortcuts
if [ -d $DATA_HOME/chimera/shortcuts ] ; then
    cd $DATA_HOME/chimera/shortcuts
    echo "Renaming paths inside yaml files"
    find . -type f -name "*.yaml" -exec sed -i 's|/steam-buddy/|/chimera/|g' {} \;
fi

# Relink ROM files
if [ -d $DATA_HOME/steam-buddy/content ] ; then
    pushd $DATA_HOME/steam-buddy/content
    relink
    popd
fi

# Relink uploaded banners
if [ -d $DATA_HOME/steam-buddy/banners ] ; then
    pushd $DATA_HOME/steam-buddy/banners
    relink
    popd
fi

# Migrate legendary config
if [ -f $CONFIG_HOME/legendary/installed.json ] ; then
    sed -i 's|/steam-buddy/|/chimera/|g' $CONFIG_HOME/legendary/installed.json
fi

# Migrate cache
if [ -d $CACHE_HOME/steam-buddy ] ; then
    # Remove chimera cache if exists
    echo "Moving cache"
    mv -Tbv $CACHE_HOME/steam-buddy $CACHE_HOME/chimera
fi

# Migrate user data directories and files from steam-buddy
if [ -d $DATA_HOME/steam-buddy ] ; then
    echo "Moving data directory"
    mv -bv $DATA_HOME/steam-buddy/* $DATA_HOME/chimera/.
    rm -rv $DATA_HOME/steam-buddy
fi

# Logout the session since we need to restart everything in ChimeraOS
case $arg in
    -l | --logout)
        echo "Migration finished. You'll be logged out"
        sleep 2
        logout
        ;;
    *)
        echo "Migration Finished. You may need to restart chimera and Steam"
        ;;
esac
