#!/usr/bin/env python
import argparse
import pyglet
from chimera_app.config import RESOURCE_DIR

DOWNLOAD_TOOL=str()
PIPE_FILE=str()

window = pyglet.window.Window(fullscreen=True)
batch = pyglet.graphics.Batch()

text_size = int(window.height//32)
label = pyglet.text.Label("Downloading configuration updates...",
                          font_name='dejavusans',
                          font_size=text_size,
                          x=window.width//2,
                          y=text_size * 5,
                          anchor_x='center', anchor_y='center',
                          batch=batch
                         )

frames = [
    RESOURCE_DIR + f"/images/splash/animated_logo/ChimeraOS_txtv3_00{n:03}.png" for n in range(1, 100)
]
animation_frames = [pyglet.image.load(image) for image in frames]

for frame in animation_frames:
    frame.anchor_x = frame.width // 2
    frame.anchor_y = frame.height // 2

animation = pyglet.image.Animation.from_image_sequence(
    animation_frames,
    duration=0.016,
    loop=True
)

background = pyglet.sprite.Sprite(img=animation,
                                  x=window.width//2,
                                  y=window.height//2,
                                  batch=batch
                                 )
background.scale=0.40 * window.height / background.height

pyglet.gl.glClearColor(0, 0, 0, 1.0)

def update_label():
    progress = 0
    with open(PIPE_FILE, 'r', encoding='utf-8') as progress_file:
        progress = int(progress_file.readlines()[-1])
    label.text=f"Downloading {DOWNLOAD_TOOL}: {progress}%"

@window.event
def on_draw():
    if DOWNLOAD_TOOL and PIPE_FILE:
        update_label()
    window.clear()
    batch.draw()

def arg_parse():
    parser = argparse.ArgumentParser(description="Simple ChimeraOS splash screen")
    parser.add_argument("-t", "--tool",
                        action='store',
                        type=str,
                        help="Tool name we are downloading"
                       )
    parser.add_argument("-p", "--pipe-file",
                        action='store',
                        type=str,
                        help="Pipe file to check percentage"
                       )

    return parser.parse_args()

def main():
    global DOWNLOAD_TOOL
    global PIPE_FILE

    args = arg_parse()

    # Only set tool and pipe if both are set otherwise just ignore
    if args.tool and args.pipe_file:
        DOWNLOAD_TOOL = args.tool
        PIPE_FILE = args.pipe_file

    pyglet.app.run()

if __name__ == "__main__":
    main()
