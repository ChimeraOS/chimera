#!/usr/bin/env python

import os
import yaml
import shutil
import filecmp
import subprocess
from inotify_simple import INotify, flags


if 'XDG_DATA_HOME' in os.environ:
	DATA_HOME = os.environ['XDG_DATA_HOME']
else:
	DATA_HOME = os.environ['HOME'] + '/.local/share'

if 'XDG_CONFIG_HOME' in os.environ:
	CONFIG_HOME = os.environ['XDG_CONFIG_HOME']
else:
	CONFIG_HOME = os.environ['HOME'] + '/.config'

STATIC_FILE    = 'steam-tweaks.yaml'
MAIN_FILE      = os.path.join(DATA_HOME, 'steam-tweaks.yaml')
OVERRIDE_FILE  = os.path.join(CONFIG_HOME, 'steam-tweaks.yaml')
STEAM_DIR      = os.path.join(DATA_HOME, 'Steam/steamapps/common')

inotify = INotify()
watch_flags = flags.CREATE | flags.MODIFY | flags.DELETE
steam_dir = inotify.add_watch(STEAM_DIR, watch_flags)


patches = {}
watches = {}
def apply_patch(game_dir):
    if not os.path.exists(os.path.join(STEAM_DIR, game_dir)):
        print('apply_patch dir not exists:', game_dir)
        return

    print('applying patch:', game_dir)
    patch_specs = patches[game_dir]
    for spec in patch_specs:
        if 'exec' in spec:
            cmd = spec['exec']
            subprocess.call([ cmd ], shell=True, cwd=os.path.join(STEAM_DIR, game_dir))
        elif 'copy' in spec:
            args = spec['copy']
            dst = os.path.join(STEAM_DIR, game_dir, args['dst'])
            if not os.path.exists(dst) or not filecmp.cmp(args['src'], dst):
                if os.path.exists(os.path.dirname(dst)):
                    print('command: copy', args['dst'])
                    shutil.copyfile(args['src'], dst)

def start_watch(game_dir):
    if not os.path.exists(os.path.join(STEAM_DIR, game_dir)):
        print('start_watch dir not exists:', game_dir)
        return

    print('starting watch:', game_dir)
    wd = inotify.add_watch(os.path.join(STEAM_DIR, game_dir), watch_flags)
    watches[wd] = game_dir
    apply_patch(game_dir)


def load_data(data_path):
    if not os.path.exists(data_path):
        return

    print('load_data:', data_path)
    data = yaml.load(open(data_path), Loader=yaml.FullLoader)
    for gameid in data:
        if 'patch_dir' in data[gameid]:
            game_dir = data[gameid]['patch_dir']
            patches[game_dir] = data[gameid]['patches']
            start_watch(game_dir)

    data.clear()

load_data(STATIC_FILE)
load_data(MAIN_FILE)
load_data(OVERRIDE_FILE)

while True:
    for event in inotify.read():
        if event.wd == steam_dir and event.name in patches:
            start_watch(event.name)
        if event.wd in watches:
            apply_patch(watches[event.wd])
